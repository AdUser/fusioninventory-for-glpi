<?php

define('PHPUnit_MAIN_METHOD', 'Plugins_Fusioninventory_Discovery_Modeles::main');
    
if (!defined('GLPI_ROOT')) {
   define('GLPI_ROOT', '../../../../..');
   $_SESSION['glpi_use_mode'] = 2;
   require_once GLPI_ROOT."/inc/includes.php";

   ini_set('display_errors','On');
   error_reporting(E_ALL | E_STRICT);
   set_error_handler("userErrorHandler");

}

/**
 * Test class for MyFile.
 * Generated by PHPUnit on 2010-08-06 at 12:05:09.
 */
class Plugins_Fusioninventory_Discovery_Modeles extends PHPUnit_Framework_TestCase {

    public static function main() {
        require_once 'PHPUnit/TextUI/TestRunner.php';

        $suite  = new PHPUnit_Framework_TestSuite('Plugins_Fusioninventory_Discovery_Modeles');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

   public function testModelesIf() {
      global $DB;
      $query = "SELECT * FROM glpi_plugin_fusioninventory_construct_mibs
         WHERE mapping_name LIKE 'if%'
         AND oid_port_dyn='0'";
      if ($result = $DB->query($query)) {
         $this->assertEquals($DB->numrows($result), 0 , 'if% in models are not in oid_port_dyn');
      }
   }

   public function testModelesMappingnameDouble() {
      global $DB;
      $query = "SELECT construct_device_id , count(ID) as countid  FROM `glpi_plugin_fusioninventory_construct_mibs`
         GROUP BY construct_device_id, mapping_name
         ORDER BY countid DESC";
      $notok = 0;
      $list = "";
      if ($result = $DB->query($query)) {
			while ($data=$DB->fetch_array($result)) {
            if ($data['countid'] > 1) {
               $notok++;
               $list .= $data['construct_device_id'].", ";
            }
         }
      }
      $this->assertEquals($notok, 0 , 'Some construct_devices have 2 same mapping name :'.$list);
   }

   public function testModelesOid() {
      global $DB;
      $query = "SELECT construct_device_id , count(ID) as countid  FROM `glpi_plugin_fusioninventory_construct_mibs`
         GROUP BY construct_device_id, mib_oid_id
         ORDER BY countid DESC";
      $notok = 0;
      $list = "";
      if ($result = $DB->query($query)) {
			while ($data=$DB->fetch_array($result)) {
            if ($data['countid'] > 1) {
               $notok++;
               $list .= $data['construct_device_id'].", ";
            }
         }
      }
      $this->assertEquals($notok, 0 , 'Some construct_devices have 2 same oid :'.$list);
   }



   public function testModelesCiscoHaveCDPoids() {
      global $DB;
      $query = "Select * FROM glpi_plugin_fusioninventory_construct_device
         LEFT JOIN  glpi_plugin_fusioninventory_construct_mibs on construct_device_id=glpi_plugin_fusioninventory_construct_device.ID
         WHERE sysdescr LIKE 'Cisco%'
            AND mapping_name = 'cdpCacheAddress' ";
      if ($result = $DB->query($query)) {
         $a_ok = array();
         $empty = 0;
         while ($data=$DB->fetch_array($result)) {
            $a_ok[$data['construct_device_id']] = 1;
         }
         $query2 = "Select * FROM glpi_plugin_fusioninventory_construct_device
            WHERE sysdescr LIKE 'Cisco%' ";
         if ($result2 = $DB->query($query2)) {
            while ($data2=$DB->fetch_array($result2)) {
               $listenot_ok = '';
               if (!isset($a_ok[$data2['ID']])) {
                  $query_walkfile = "SELECT * FROM glpi_plugin_fusioninventory_construct_walks
                     WHERE `construct_device_id`='".$data2['ID']."' ";
                  if ($result_walkfile = $DB->query($query_walkfile)) {
                     if ($DB->numrows($result_walkfile) > 0) {
                        $list_not_ok .= $data2['ID'].", ";
                     } else {
                        $empty++;
                     }
                  }
               }
            }
            $this->assertEquals(($DB->numrows($result2) - $DB->numrows($result) - $empty), 0 , 'Cisco models haven\'t CDP oids : '.$list_not_ok);
         }
      }
   }


   public function testModelesNonCiscoVlanActivated() {
      global $DB;
      $query = "SELECT * FROM glpi_plugin_fusioninventory_construct_mibs
         LEFT JOIN glpi_plugin_fusioninventory_construct_device on construct_device_id=glpi_plugin_fusioninventory_construct_device.ID
         WHERE sysdescr NOT LIKE 'Cisco%'
            AND vlan='1' ";
      $list = "";
      if ($result = $DB->query($query)) {
			while ($data=$DB->fetch_array($result)) {
            $list .= $data['construct_device_id'].", ";
         }
      }
      $this->assertEquals($DB->numrows($result), 0 , 'Vlan activated on non Cisco switch :'.$list);
   }


}

// Call Plugins_Fusioninventory_Discovery_Newdevices::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'Plugins_Fusioninventory_Discovery_Modeles::main') {
    Plugins_Fusioninventory_Discovery_Modeles::main();
}
?>